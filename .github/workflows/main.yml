name: CI
on: [push, pull_request]
jobs:
  ci:
    name: Runs PHP tests and build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: cs2pr

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer development dependencies
        run: composer install --no-interaction --classmap-authoritative --no-progress

      - name: Run unit tests
        run: composer run-script phpunit:ci

#      - name: Run PHP CS Fixer (dry run)
#        run: PHP_CS_FIXER_IGNORE_ENV=1 composer run-script phpcs:github-actions | cs2pr --graceful-warnings

      - name: Install Composer production dependencies
        run: APP_ENV=prod APP_DEBUG=0 composer install --no-interaction --classmap-authoritative --no-progress --no-dev

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker tag
        id: docker_tag
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [ ${BRANCH} = "master" ]; then TAG=$(date +%Y%m%d%H%M%S);BUILD=latest; else TAG=${BRANCH//[^a-zA-Z0-9]/-};BUILD=staging; fi;
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=build::${BUILD}

      - name: Build NginX Docker image and push to Dockerhub
        id: docker_build_nginx
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/nginx/Dockerfile
          push: true
          tags: |
            elliotjreed/image-server-nginx:${{ steps.docker_tag.outputs.tag }}
            elliotjreed/image-server-nginx:${{ steps.docker_tag.outputs.build }}

      - name: Build PHP Docker image and push to Dockerhub
        id: docker_build_php
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/php/Dockerfile
          push: true
          tags: |
            elliotjreed/image-server-php:${{ steps.docker_tag.outputs.tag }}
            elliotjreed/image-server-php:${{ steps.docker_tag.outputs.build }}

      - name: NginX Image digest
        run: echo ${{ steps.docker_build_nginx.outputs.digest }}

      - name: PHP Docker image digest
        run: echo ${{ steps.docker_build_php.outputs.digest }}
